总结：对父类、子类、抽象、继承有了更深的认识。

任务要求：将上一任务中的踢球封装为父类，停球继承踢球。我们定义停球的行为，是将足球踢向一个距离自己很近的位置，甚至距离为0。为了简化需求，我们将停球动作抽象为以下规则：当球员静止时，球停在原地；当球员运动时，球停到 1 秒后球员在的位置。

详细总结：
刚开始看见这个要求不太理解，为什么要把一个方法封装成类，然后还要再来个子类继承它，感觉明明直接在球员类里写个停球方法就搞定了，像要求那么些反而麻烦且有点无从下手（仅仅为了一个方法写一个类，不太习惯）。但是硬写出来之后，再加上无意中注意到了结尾的抽象两个字，突然明白了，停球实际上是踢球的一个特殊形式（把球踢到距离自己0米处或者很近的距离处）。所以先把踢球方法在父类里实现，然后停球子类继承父类，并更详细的、根据不同情况使用父类的踢球方法，从而在子类中完成静止停球和动态停球。传球子类继承父类同理。

延伸总结：
子类继承父类，或者实现类继承抽象类，就是把子类中核心的、或逻辑上可以分出去的、或主体功能的部分（或者多个子类中相同通用的那部分）在父类中先实现，从而达到或者为将来可能新增的子类达到代码复用、逻辑清晰、层次分明的作用。